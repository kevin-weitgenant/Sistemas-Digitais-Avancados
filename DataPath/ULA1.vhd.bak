LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_unsigned.all;


use ieee.numeric_std.all;



ENTITY ULA1 IS
	PORT ( controle : IN STD_LOGIC_VECTOR (0 TO 1);
	A,B : IN STD_LOGIC_VECTOR (0 TO 31);
	--cout_teste: OUT BIT;  -- falta ov
	D : OUT STD_LOGIC_VECTOR (0 TO 31));
	
	END ULA1;

	
	ARCHITECTURE comportamento OF ULA1 IS
	SIGNAL aux_cin: BIT;   -- falta ov   cout_add,cout_soma,
	
	SIGNAL AUX_SAIDA,resultado_soma,resultado_sub: STD_LOGIC_VECTOR(0 TO 31);
	signal add,sub : STD_LOGIC;
	 
	COMPONENT somador_subtrator_nbits
	 GENERIC ( N	: INTEGER := 32);
	 PORT (c0   : IN STD_LOGIC;
	       a,b  : IN STD_LOGIC_VECTOR(N-1 DOWNTO 0);
			 s    : OUT STD_LOGIC_VECTOR(N-1 DOWNTO 0);
          c4   : OUT STD_LOGIC);
	END COMPONENT;

	
	BEGIN	
	add<= 0;
	sub<= 1;
	
	PROCESS (controle, C, D)
	BEGIN
	SOMADOR: somador_subtrator_nbits PORT MAP (add, A, B, resultado_soma, cout_add);
	SUBTRATOR: somador_subtrator_nbits PORT MAP (sub, A, B, resultado, cout_soma);
	
	
	
	CASE controle IS
		WHEN "00" => AUX_SAIDA <= A;
		WHEN "11" => AUX_SAIDA <= A AND D;
		WHEN "01" => AUX_SAIDA <= soma;
		WHEN "10" => AUX_SAIDA <= resultado;	
		END CASE;	
	
	END PROCESS;
	
	
	DATA_OUT <=AUX_SAIDA;
	 
	
	END comportamento;